// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace MyUplinkConnector.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    #pragma warning disable CS1591
    public partial class PremiumFeatureResponseModel : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Premium features enum.</summary>
        public global::MyUplinkConnector.Client.Models.PremiumFeatures? Type { get; set; }
        /// <summary>The validUntil property</summary>
        public DateTimeOffset? ValidUntil { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::MyUplinkConnector.Client.Models.PremiumFeatureResponseModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::MyUplinkConnector.Client.Models.PremiumFeatureResponseModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::MyUplinkConnector.Client.Models.PremiumFeatureResponseModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "type", n => { Type = n.GetEnumValue<global::MyUplinkConnector.Client.Models.PremiumFeatures>(); } },
                { "validUntil", n => { ValidUntil = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::MyUplinkConnector.Client.Models.PremiumFeatures>("type", Type);
            writer.WriteDateTimeOffsetValue("validUntil", ValidUntil);
        }
    }
}
