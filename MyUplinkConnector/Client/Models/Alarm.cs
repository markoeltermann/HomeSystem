// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace MyUplinkConnector.Client.Models
{
    /// <summary>
    /// Alarm.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class Alarm : IParsable
    {
        /// <summary>The companyÂ´s id of the alarm.</summary>
        public int? AlarmNumber { get; private set; }
        /// <summary>Date of the creation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedDatetime { get; set; }
#nullable restore
#else
        public string CreatedDatetime { get; set; }
#endif
        /// <summary>Localized alarm description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The device which the alarm belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceId { get; set; }
#nullable restore
#else
        public string DeviceId { get; set; }
#endif
        /// <summary>The name of the equipment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EquipName { get; set; }
#nullable restore
#else
        public string EquipName { get; set; }
#endif
        /// <summary>Localized alarm title.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Header { get; set; }
#nullable restore
#else
        public string Header { get; set; }
#endif
        /// <summary>The id of the alarm stored in the database.</summary>
        public Guid? Id { get; set; }
        /// <summary>Determines the severity of the alarm,1 being the most severe.</summary>
        public int? Severity { get; set; }
        /// <summary>The status property</summary>
        public global::MyUplinkConnector.Client.Models.Status? Status { get; set; }
        /// <summary>Status history.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::MyUplinkConnector.Client.Models.AlarmStatus>? StatusHistory { get; set; }
#nullable restore
#else
        public List<global::MyUplinkConnector.Client.Models.AlarmStatus> StatusHistory { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::MyUplinkConnector.Client.Models.Alarm"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::MyUplinkConnector.Client.Models.Alarm CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::MyUplinkConnector.Client.Models.Alarm();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alarmNumber", n => { AlarmNumber = n.GetIntValue(); } },
                { "createdDatetime", n => { CreatedDatetime = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "deviceId", n => { DeviceId = n.GetStringValue(); } },
                { "equipName", n => { EquipName = n.GetStringValue(); } },
                { "header", n => { Header = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "severity", n => { Severity = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::MyUplinkConnector.Client.Models.Status>(); } },
                { "statusHistory", n => { StatusHistory = n.GetCollectionOfObjectValues<global::MyUplinkConnector.Client.Models.AlarmStatus>(global::MyUplinkConnector.Client.Models.AlarmStatus.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("createdDatetime", CreatedDatetime);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("deviceId", DeviceId);
            writer.WriteStringValue("equipName", EquipName);
            writer.WriteStringValue("header", Header);
            writer.WriteGuidValue("id", Id);
            writer.WriteIntValue("severity", Severity);
            writer.WriteEnumValue<global::MyUplinkConnector.Client.Models.Status>("status", Status);
            writer.WriteCollectionOfObjectValues<global::MyUplinkConnector.Client.Models.AlarmStatus>("statusHistory", StatusHistory);
        }
    }
}
